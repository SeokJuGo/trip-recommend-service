CREATE SCHEMA IF NOT EXISTS ENJOYTRIP;
USE ENJOYTRIP;

-- DROP TABLES FOR INITIALIZE
-- DROP TABLE IF EXISTS PLAN_ATTRACTION; 
DROP TABLE IF EXISTS PLAN;
DROP TABLE IF EXISTS FILEINFO;
DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS BOARD;
DROP TABLE IF EXISTS BOARD_TYPE;
DROP TABLE IF EXISTS PROFILE_IMAGE;
DROP TABLE IF EXISTS AUTH;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ROLE;


/* CREATE TABLES AND INSERT SAMPLE DATA RELATED TO USER */


-- CREATE TABLE ROLE
CREATE TABLE IF NOT EXISTS ROLE (
    id 				INT AUTO_INCREMENT PRIMARY KEY,
    name 			VARCHAR(50) NOT NULL UNIQUE,
    description		VARCHAR(255),
	created_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
INSERT INTO ROLE (id, name, description) VALUE (1, "ADMIN", "관리자");
INSERT INTO ROLE (id, name, description) VALUE (2, "USER", "사용자");
INSERT INTO ROLE (id, name, description) VALUE (3, "GUEST", "비회원");

-- CREATE TABLE USER
CREATE TABLE IF NOT EXISTS USER (
	id				INT AUTO_INCREMENT PRIMARY KEY,
    username 		VARCHAR(50) 	NOT NULL UNIQUE,
    password 		VARCHAR(255)	NOT NULL,
    nickname		VARCHAR(100) 	NOT NULL,
    email 			VARCHAR(100) 	NOT NULL UNIQUE,
    created_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    role_id			INT DEFAULT 2,
    CONSTRAINT		FK_USER_ROLE
		FOREIGN KEY (role_id) REFERENCES ROLE (id)
        ON DELETE CASCADE
);
INSERT INTO USER (username, password, nickname, email, role_id) VALUES
("admin", "1234", "NickName_Admin", "admin@ssafy.com", 1),
("ssafy", "1234", "NickName_SSAFY", "ssafy@ssafy.com", 1),
("test1", "1234", "NickName_Test1", "test1@ssafy.com", 2),
("test2", "1234", "NickName_Test2", "test2@ssafy.com", 2),
("test3", "1234", "NickName_Test3", "test3@ssafy.com", 3),
("user1", "1234", "NickName_User1", "user1@ssafy.com", 2),
("user2", "1234", "NickName_User2", "user2@ssafy.com", 2),
("user3", "1234", "NickName_User3", "user3@ssafy.com", 3);

-- CREATE TABLE AUTH
CREATE TABLE IF NOT EXISTS AUTH (
    username      VARCHAR(50) PRIMARY KEY,
    token         VARCHAR(300),
    CONSTRAINT        FK_AUTH_USER
		FOREIGN KEY (username)
		REFERENCES USER (username)
        ON DELETE CASCADE
);


/* CREATE TABLES AND INSERT SAMPLE DATA RELATED TO BOARD */


-- CREATE TABLE BOARD TYPE
CREATE TABLE IF NOT EXISTS BOARD_TYPE (
    id 				INT AUTO_INCREMENT PRIMARY KEY,
    name			VARCHAR(255) NOT NULL UNIQUE,
	description		VARCHAR(255),
	created_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
INSERT INTO BOARD_TYPE (id, name, description) VALUES (1, 'BOARD', '일반 게시판');
INSERT INTO BOARD_TYPE (id, name, description) VALUES (2, 'PLAN', '나의여행계획 게시판');
INSERT INTO BOARD_TYPE (id, name, description) VALUES (3, 'HOTPLACE', '핫플레이스 게시판');
INSERT INTO BOARD_TYPE (id, name, description) VALUES (4, 'SHARE', '정보공유 게시판');

-- CREATE TABLE BOARD
CREATE TABLE IF NOT EXISTS BOARD (
    id 				INT AUTO_INCREMENT PRIMARY KEY,
    title 			VARCHAR(255) 	NOT NULL,
    content			TEXT 			NOT NULL,
    hit				INT DEFAULT 0,
    created_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id			INT,
    board_type_id	INT,
    CONSTRAINT FK_BOARD_USER
		FOREIGN KEY (user_id)
        REFERENCES USER (id)
        ON DELETE CASCADE,
	CONSTRAINT FK_BOARD_BOARD_TYPE
		FOREIGN KEY (board_type_id)
        REFERENCES BOARD_TYPE (id)
        ON DELETE CASCADE
);

-- CREATE TABLE COMMENT
CREATE TABLE IF NOT EXISTS COMMENT (
    id 				INT AUTO_INCREMENT PRIMARY KEY,
    content			VARCHAR(500) NOT NULL COMMENT '내용',
    created_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id			INT,
    board_id		INT,
	CONSTRAINT FK_COMMENT_USER
		FOREIGN KEY (user_id)
        REFERENCES USER (id)
        ON DELETE CASCADE,
	CONSTRAINT FK_COMMENT_BOARD
		FOREIGN KEY (board_id)
        REFERENCES BOARD (id)
        ON DELETE CASCADE
);

-- CREATE TABLE FILEINFO
CREATE TABLE IF NOT EXISTS FILEINFO (
    id 				INT AUTO_INCREMENT PRIMARY KEY,
    filesize		INT NOT NULL COMMENT '파일 크기',
    filename		VARCHAR(255) NOT NULL COMMENT '원본 파일이름',
    filepath		VARCHAR(255) NOT NULL COMMENT '파일 저장경로',
    created_date	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    board_id	INT,
	CONSTRAINT FK_FILEINFO_BOARD
		FOREIGN KEY (board_id)
        REFERENCES BOARD (id)
        ON DELETE CASCADE
);

-- CREATE TABLE PROFILE_IMAGE
CREATE TABLE IF NOT EXISTS PROFILE_IMAGE (
    id                 INT AUTO_INCREMENT PRIMARY KEY,
    filesize        INT NOT NULL COMMENT '파일 크기',
    filename        VARCHAR(255) NOT NULL COMMENT '원본 파일이름',
    filepath        VARCHAR(255) NOT NULL COMMENT '파일 저장경로',
    created_date    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id            INT,
    CONSTRAINT FK_PROFILEIMAGE_USER
        FOREIGN KEY (user_id)
        REFERENCES USER (id)
        ON DELETE CASCADE
);


/* CREATE TABLES AND INSERT SAMPLE DATA RELATED TO PLAN */


--  CREATE TABLE BOARD_ATTRACTION
CREATE TABLE IF NOT EXISTS PLAN (
    id 				INT AUTO_INCREMENT PRIMARY KEY,
    detail			VARCHAR(255),
    distance		INT,
	board_id		INT NOT NULL,
    attraction_id	INT NOT NULL,
    created_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date 	TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT FK_PLAN_BOARD
		FOREIGN KEY (board_id)
        REFERENCES BOARD (id)
        ON DELETE CASCADE,
	CONSTRAINT FK_PLAN_ATTRACTION
		FOREIGN KEY (attraction_id)
        REFERENCES ATTRACTION_INFO (content_id)
        ON DELETE CASCADE
);
